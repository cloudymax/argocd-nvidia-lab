---
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.cloudydev.net
    path: /
    tls:
      - secretName: letsencrypt-staging
        hosts:
          - prometheus.cloudydev.net
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    resources:
      requests:
        memory: 700Mi
        cpu: 100m
      limits:
        memory: 2000Mi
        cpu: 1000m
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: local-path
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
    retention: 7d
    logLevel: debug
    # Dont use additionalScrapeConfigs, its useless. You need to create your scrape configs as secrets.
    # Follow the directions listed by the prometheus operator as it overrides anything in this block.
    # you can find those docs here: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/additional-scrape-config.md
    # additionalScrapeConfigs: []
    additionalScrapeConfigsSecret:
      enabled: true
      name: scrape-configs
      key: scrape-configs.yaml
  prometheusOperator:
    namespaces:
      releaseNamespace: true
      additional:
        - kube-system
    admissionWebhooks:
      certManager:
        enabled: yes
      patch:
        enabled: false
alertmanager:
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - alertmanager.cloudydev.net
    path: /
    tls:
      - secretName: letsencrypt-staging
        hosts:
          - alertmanager.cloudydev.net
grafana:
  adminPassword: prom-operator
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - grafana.cloudydev.net
    path: /
    tls:
      - secretName: letsencrypt-staging
        hosts:
          - grafana.cloudydev.net
scrape_configs:
  - job_name: ingress
    honor_timestamps: true
    scrape_interval: 1m
    scrape_timeout: 1m
    metrics_path: /metrics
    scheme: http
