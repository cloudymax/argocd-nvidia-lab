apiVersion: v1
kind: Namespace
metadata:
  name: nginx-hello-bluegreen
---
# This example demonstrates a Rollout using the blue-green update strategy, which contains a manual
# gate before promoting the new stack.
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-bluegreen
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rnginx-hello-bluegreen
  template:
    metadata:
      labels:
        app: nginx-hello-bluegreen
    spec:
      containers:
      - name: nginx-hello-bluegreen
        image: nginx/rollouts-demo:blue
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: nginx-hello-bluegreen-active
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: nginx-hello-bluegreen-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: false
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hello-bluegreen-active
  namespace: nginx-hello-bluegreen
spec:
  selector:
    app: nginx-hello-bluegreen
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hello-blue
  namespace: nginx-hello-bluegreen-preview
spec:
  selector:
    app: nginx-hello-bluegreen
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-hello-bluegreen-ingress
  namespace: nginx-hello-rollout
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
    - hosts:
      - nginx-hello.cloudydev.net
      secretName: "nginx-hello-bluegreen-tls"
  rules:
  - host: nginx-hello.cloudydev.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-hello-service
            port:
              number: 8080
